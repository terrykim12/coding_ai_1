{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"is_prime() 에라토스테네스 최적화 힌트\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"add() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"add() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 0 나누기 방지와 오류 메시지 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"is_prime() 에라토스테네스 최적화 힌트\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() n==0/1 경계 처리 및 입력검증\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() n==0/1 경계 처리 및 입력검증\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 0 나누기 방지와 오류 메시지 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"add() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 0 나누기 방지와 오류 메시지 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() n==0/1 경계 처리 및 입력검증\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"add()에 타입/음수 입력 방지와 예외처리 추가\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"factorial() 재귀→반복 변환 및 큰수 보호\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"add() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"factorial() 재귀→반복 변환 및 큰수 보호\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 0 나누기 방지와 오류 메시지 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"add() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"add() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() n==0/1 경계 처리 및 입력검증\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"factorial() 재귀→반복 변환 및 큰수 보호\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 0 나누기 방지와 오류 메시지 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() n==0/1 경계 처리 및 입력검증\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"add()에 타입/음수 입력 방지와 예외처리 추가\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() n==0/1 경계 처리 및 입력검증\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"add() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"is_prime() 에라토스테네스 최적화 힌트\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"fibonacci() n==0/1 경계 처리 및 입력검증\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"divide() 개선\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
{"instruction": "You are a PATCH generator. Return ONLY the items of the edits array. No markdown or fences.", "input": "{\"plan\": {\"files\": [{\"path\": \"\", \"reason\": \"factorial() 재귀→반복 변환 및 큰수 보호\", \"strategy\": \"regex\", \"tests\": []}], \"notes\": \"\"}}", "output": "{\"version\": \"1\", \"edits\": [{\"path\": \"examples/sample_py/app.py\", \"loc\": {\"type\": \"regex\", \"pattern\": \"^def add\\\\(\"}, \"action\": \"insert_before\", \"code\": \"# AUTO-GUARD: inserted by AI bench fallback\\n\"}]}"}
