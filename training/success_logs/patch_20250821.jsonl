{"when": "2025-08-21T00:39:20.931263", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:39:29.116382", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:39:37.394687", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:39:45.737449", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:39:54.033156", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:40:01.785149", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:40:09.444345", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:40:18.681581", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:40:27.635758", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:40:37.275750", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:40:46.358303", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:40:55.501537", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:41:04.429557", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:41:12.870988", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:41:20.980986", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:41:29.356937", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:41:37.814972", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:41:46.002038", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:41:54.362700", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T00:42:02.831314", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:10:26.103492", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:10:33.882490", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:10:41.477229", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:10:49.414163", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:10:57.157259", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:11:05.699310", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:11:14.150956", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:11:22.315740", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:11:30.607167", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:11:38.754853", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:11:46.996997", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:11:55.058822", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:12:03.229912", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:12:11.241268", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:12:19.425139", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:12:27.510131", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:12:35.572485", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:12:44.207687", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:12:52.072203", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:13:00.659708", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:13:09.105058", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:13:17.454484", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:13:25.625815", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:13:34.476897", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:13:43.290137", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:13:52.318104", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:14:01.117755", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:14:09.891587", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:14:18.968468", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:14:27.688812", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:14:36.747623", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:14:45.515898", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:14:54.706728", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:15:03.450722", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:15:12.539687", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:15:21.335133", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:15:30.300828", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:15:38.903264", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:15:47.725181", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:15:56.586351", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:16:05.675486", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:16:14.549870", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:16:23.181263", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:16:31.856781", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:16:40.459865", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:16:49.324421", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:16:57.821964", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:17:06.737275", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:17:15.345001", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:17:24.307239", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:17:33.161276", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:17:42.151405", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:17:50.836831", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:17:59.726382", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:18:08.397698", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:18:17.183680", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:18:25.845557", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:18:34.608826", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:18:43.286394", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:18:51.960347", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:19:01.309382", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:19:10.756670", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:19:20.275429", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:19:29.586849", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:19:38.837810", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:19:47.959089", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:19:57.155815", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:20:05.127346", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:20:13.393339", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:20:21.330846", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:20:29.614548", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:20:37.541503", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:20:45.659328", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:20:53.604420", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:21:01.539085", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:21:09.734210", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:21:17.776048", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:21:25.986613", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:21:33.912118", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:21:42.003358", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:21:50.253383", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:21:58.410141", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:22:06.446132", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:22:14.339949", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:22:22.594067", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:22:30.677111", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:22:38.954833", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:22:46.882469", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:22:55.053245", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:23:03.088165", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:23:11.119448", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:23:19.189266", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:23:27.078246", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:23:35.396031", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:23:43.414923", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:23:51.655884", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:23:59.597438", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:24:07.632287", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:24:15.754903", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:24:23.723187", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:24:31.923979", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:24:39.790768", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:24:47.820084", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:24:55.821266", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:25:03.966108", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:25:11.977429", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:25:19.783039", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:25:27.851759", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:25:35.765506", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:25:43.818859", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:25:51.820879", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:25:59.691123", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:26:07.775857", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:26:15.804211", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:26:24.024479", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:26:31.930038", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:26:39.859761", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:26:47.872214", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:26:55.917770", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:27:04.028118", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:30:29.884561", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:30:37.526138", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:30:45.125497", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:30:53.605289", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:31:01.811186", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:31:10.342426", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:31:18.240932", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:31:26.036906", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:31:34.352956", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:31:42.595531", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:31:52.049943", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:32:00.673126", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:32:08.890340", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:32:16.941022", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:32:24.957073", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:32:33.078270", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:32:41.970021", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:32:50.985618", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:33:00.232866", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:33:09.350672", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:33:18.795381", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:33:28.653061", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:33:37.385992", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:33:45.480433", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:33:53.677334", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:34:01.866531", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:34:08.965912", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:34:17.569825", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:34:26.612991", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:34:35.426387", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:34:43.944532", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:34:52.585062", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:35:00.966193", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:35:09.372702", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:35:18.146027", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:35:26.229832", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:35:34.727799", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:35:42.735348", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:35:51.306742", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:36:00.276847", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:36:10.405963", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:36:19.176109", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:36:27.792386", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:36:35.008759", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:36:43.138629", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:36:52.326392", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:37:01.240858", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:37:10.477380", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:37:19.477858", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:37:28.924099", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:37:37.836099", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:37:47.229863", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:37:56.035744", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:38:05.316074", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:38:15.251460", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:38:25.332010", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:38:34.199507", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:38:43.291071", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:38:52.317952", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T15:39:01.569991", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:27:46.631238", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:27:54.192902", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:28:01.372127", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:28:08.659361", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:28:16.003852", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:28:23.138375", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:28:30.722983", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:28:37.981188", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:28:45.374855", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:28:52.692799", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:28:59.976660", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:29:07.343236", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:29:14.568240", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:29:21.696844", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:29:29.244006", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:29:36.506390", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:29:43.929689", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:29:51.284381", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:29:58.512188", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:30:06.060157", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:30:13.206239", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:30:20.454558", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:30:27.864716", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:30:35.153915", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:30:42.338947", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:30:49.369200", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:30:56.439102", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:31:03.909272", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:31:11.134457", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:31:18.295113", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:31:25.622510", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:31:32.800409", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:31:40.493194", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:31:48.831224", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:31:57.106372", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:32:05.046990", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:32:13.049080", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:32:21.127971", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:32:28.846725", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:32:36.847962", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:32:44.875468", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:32:52.737343", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:33:00.669646", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:33:08.407058", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:33:16.439191", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:33:24.545763", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:33:32.778822", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:33:40.803140", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:33:48.734337", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:33:56.364974", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:34:03.582938", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:34:10.940123", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:34:18.287115", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:34:25.376314", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:34:32.651909", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:34:39.914114", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:34:47.123095", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:34:54.305811", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:35:01.501927", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:35:08.743018", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:35:16.312902", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:35:23.463239", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:35:30.691419", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:35:37.956684", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:35:45.403526", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:35:52.848991", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:35:59.891339", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:36:07.184552", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:36:14.634060", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:36:21.858264", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:36:29.203992", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:36:36.380030", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:36:43.817263", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:36:51.165127", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:36:58.250332", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:37:05.666484", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:37:12.823858", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:37:20.137464", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:37:27.617769", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:37:34.637746", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:37:41.938811", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:37:49.522214", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:37:57.533497", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:38:05.520712", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:38:13.400577", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:38:21.266936", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:38:29.281465", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:38:37.048465", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:38:45.021904", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:38:52.911452", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:39:00.842735", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:39:08.612686", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:39:16.445620", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:39:24.388356", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:39:32.238743", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:39:40.254345", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:39:48.043146", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:39:56.091213", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:40:03.976759", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:40:11.774137", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:40:19.760563", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:40:27.551286", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:40:35.529875", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:40:43.247951", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:40:51.026576", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:40:59.078030", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:41:07.031406", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:41:15.254772", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:41:23.133136", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:41:31.070220", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:41:38.977918", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:41:46.820816", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:41:54.719924", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:42:02.416823", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:42:10.590964", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:42:18.310188", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:42:25.650908", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:42:33.118335", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:42:40.089786", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:42:47.261253", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:42:54.410384", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:43:01.855259", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:43:09.163159", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:43:16.438695", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:43:23.729251", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:43:31.077894", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:43:38.352473", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:43:45.738078", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:43:52.917360", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:44:00.067466", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:44:07.485908", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:44:14.444026", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:44:21.836843", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:44:29.090778", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:44:36.129697", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:44:43.664113", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:44:50.744408", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:44:57.909100", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:45:05.107634", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:45:12.271015", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:45:19.444465", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:45:26.624184", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:45:33.704121", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:45:40.934060", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:45:48.213574", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:45:55.349152", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:46:02.672208", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:46:09.730496", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:46:17.159574", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:46:24.633864", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:46:32.415792", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:46:40.470584", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:46:48.052412", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:46:55.644597", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:47:03.334749", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:47:11.008143", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:47:18.918000", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:47:26.540559", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:47:34.518985", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:47:42.171256", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:47:49.844047", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:47:57.815381", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:48:05.462747", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:48:13.154597", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:48:20.841425", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:48:28.421269", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:48:35.684566", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:48:42.844815", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:48:49.963104", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:48:57.017352", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:49:03.922389", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:49:11.307881", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:49:18.499304", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:49:25.619474", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:49:32.802009", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:49:39.695504", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:49:46.883527", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:49:54.076649", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:50:01.173038", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:50:08.472893", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:50:15.696381", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:50:22.896812", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:50:30.138730", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:50:37.261685", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:50:44.573917", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:50:51.654043", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:50:58.759552", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:51:05.884996", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:51:13.115618", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:51:20.365958", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:51:27.610344", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "factorial() 재귀→반복 변환 및 큰수 보호", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:51:34.742833", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:51:41.992924", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:51:49.503383", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "is_prime() 에라토스테네스 최적화 힌트", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:51:56.542995", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 0 나누기 방지와 오류 메시지 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:52:03.750803", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:52:10.644109", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:52:17.790399", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add()에 타입/음수 입력 방지와 예외처리 추가", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:52:25.026040", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T16:52:32.252970", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() n==0/1 경계 처리 및 입력검증", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "log"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:16:31.016461", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:16:39.778276", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:16:48.871372", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:16:58.052064", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:17:07.303563", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:17:16.642617", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:17:26.377566", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:17:36.212250", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:17:46.001768", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:17:56.116039", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:18:06.204948", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:18:16.186198", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:18:25.914882", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:18:35.914267", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:18:45.411753", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:18:55.063767", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:19:05.273824", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:19:15.083930", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:19:25.051941", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:19:34.641419", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:19:49.898471", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:19:58.216291", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:20:06.393062", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:20:14.656645", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:20:22.854464", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:20:31.164329", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:20:39.319247", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:20:47.583156", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:20:55.730417", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:21:03.911014", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:21:12.195425", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:21:20.347636", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:21:28.615587", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:21:36.841720", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:21:45.143540", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:21:53.332247", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:22:01.496290", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:22:09.643197", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:22:17.886305", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:22:26.191884", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "divide() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:22:43.945013", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:22:52.737828", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:23:01.610502", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:23:10.491271", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:23:19.697321", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:23:28.940302", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:23:38.000160", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:23:47.376793", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:23:56.528380", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:24:05.668369", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:24:14.527620", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:24:23.912272", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:24:32.867668", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:24:42.911136", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:24:52.888651", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:25:03.194134", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:25:13.120506", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:25:23.347630", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:25:33.249012", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T18:25:43.655310", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "fibonacci() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:24:21.177302", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "smoke", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "smoke"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:24:33.923288", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:24:40.636640", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:24:47.404782", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:24:54.297704", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:25:01.194343", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:25:07.983031", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:25:14.863691", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:25:21.714555", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:25:28.499093", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:25:35.288083", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:25:42.121420", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:25:49.031804", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:25:55.737525", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:26:02.430277", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:26:09.339820", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:26:16.149394", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:26:22.912700", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:26:29.780529", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:26:36.615040", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
{"when": "2025-08-21T19:26:43.412060", "role": "patch_success", "plan": {"files": [{"path": "", "reason": "add() 개선", "strategy": "regex", "tests": []}], "notes": ""}, "feedback": {"hint": "Return ONLY items of the edits array. No markdown.", "reason": "bench"}, "patch": {"version": "1", "edits": [{"path": "examples/sample_py/app.py", "loc": {"type": "regex", "pattern": "^def add\\("}, "action": "insert_before", "code": "# AUTO-GUARD: inserted by AI bench fallback\n"}]}}
